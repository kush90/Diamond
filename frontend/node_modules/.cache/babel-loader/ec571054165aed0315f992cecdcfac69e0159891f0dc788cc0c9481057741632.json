{"ast":null,"code":"export const API_URL = \"http://localhost:4000\";\n// export const API_URL = \"https://pos-41xz.onrender.com\";\n\nexport const createStorage = (key, item) => {\n  if (!localStorage.getItem(key)) localStorage.setItem(key, JSON.stringify(item));else localStorage.setItem(key, JSON.stringify(item));\n};\nexport const getStorage = key => {\n  return localStorage.getItem(key);\n};\nexport const clearStorage = key => {\n  localStorage.removeItem(key);\n};\nexport const checkStorage = key => {\n  if (localStorage.getItem(key)) return true;else return false;\n};\n\n// set token to request header\nexport const setNetworkHeader = () => {\n  let user = JSON.parse(getStorage('user'));\n  return {\n    headers: {\n      \"Authorization\": `Bearer ${user.token}`\n    }\n  };\n};\nexport const formatDateToLocaleString = epoch => new Date(epoch).toLocaleDateString();\nexport const separateAndCapitalize = str => {\n  // Split the string into words\n  const words = str.split(/(?=[A-Z])/);\n\n  // Capitalize the first letter of each word\n  const capitalizedWords = words.map(word => word.charAt(0).toUpperCase() + word.slice(1));\n\n  // Join the words back into a string\n  const result = capitalizedWords.join(' ');\n  return result;\n};\nexport var months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];","map":{"version":3,"names":["API_URL","createStorage","key","item","localStorage","getItem","setItem","JSON","stringify","getStorage","clearStorage","removeItem","checkStorage","setNetworkHeader","user","parse","headers","token","formatDateToLocaleString","epoch","Date","toLocaleDateString","separateAndCapitalize","str","words","split","capitalizedWords","map","word","charAt","toUpperCase","slice","result","join","months"],"sources":["/Users/maungkush/Documents/Diamond/frontend/src/Helper.js"],"sourcesContent":["export const API_URL = \"http://localhost:4000\";\n// export const API_URL = \"https://pos-41xz.onrender.com\";\n\nexport const createStorage = (key, item) => {\n    if (!localStorage.getItem(key)) localStorage.setItem(key, JSON.stringify(item));\n    else localStorage.setItem(key,JSON.stringify(item))\n}\n\nexport const getStorage = (key) => {\n    return localStorage.getItem(key);\n}\n\nexport const clearStorage = (key) => {\n    localStorage.removeItem(key);\n}\n\nexport const checkStorage = (key) => {\n    if (localStorage.getItem(key)) return true;\n    else return false;\n}\n\n// set token to request header\nexport const setNetworkHeader = () => {\n    let user = JSON.parse(getStorage('user'));\n    return { headers: { \"Authorization\": `Bearer ${user.token}` } }\n}\n\nexport const formatDateToLocaleString = (epoch) => new Date(epoch).toLocaleDateString();\n\nexport const separateAndCapitalize = (str) => {\n    // Split the string into words\n    const words = str.split(/(?=[A-Z])/);\n\n    // Capitalize the first letter of each word\n    const capitalizedWords = words.map(word => word.charAt(0).toUpperCase() + word.slice(1));\n\n    // Join the words back into a string\n    const result = capitalizedWords.join(' ');\n\n    return result;\n}\nexport var months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\",\"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];"],"mappings":"AAAA,OAAO,MAAMA,OAAO,GAAG,uBAAuB;AAC9C;;AAEA,OAAO,MAAMC,aAAa,GAAGA,CAACC,GAAG,EAAEC,IAAI,KAAK;EACxC,IAAI,CAACC,YAAY,CAACC,OAAO,CAACH,GAAG,CAAC,EAAEE,YAAY,CAACE,OAAO,CAACJ,GAAG,EAAEK,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC,CAAC,CAAC,KAC3EC,YAAY,CAACE,OAAO,CAACJ,GAAG,EAACK,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC,CAAC;AACvD,CAAC;AAED,OAAO,MAAMM,UAAU,GAAIP,GAAG,IAAK;EAC/B,OAAOE,YAAY,CAACC,OAAO,CAACH,GAAG,CAAC;AACpC,CAAC;AAED,OAAO,MAAMQ,YAAY,GAAIR,GAAG,IAAK;EACjCE,YAAY,CAACO,UAAU,CAACT,GAAG,CAAC;AAChC,CAAC;AAED,OAAO,MAAMU,YAAY,GAAIV,GAAG,IAAK;EACjC,IAAIE,YAAY,CAACC,OAAO,CAACH,GAAG,CAAC,EAAE,OAAO,IAAI,CAAC,KACtC,OAAO,KAAK;AACrB,CAAC;;AAED;AACA,OAAO,MAAMW,gBAAgB,GAAGA,CAAA,KAAM;EAClC,IAAIC,IAAI,GAAGP,IAAI,CAACQ,KAAK,CAACN,UAAU,CAAC,MAAM,CAAC,CAAC;EACzC,OAAO;IAAEO,OAAO,EAAE;MAAE,eAAe,EAAG,UAASF,IAAI,CAACG,KAAM;IAAE;EAAE,CAAC;AACnE,CAAC;AAED,OAAO,MAAMC,wBAAwB,GAAIC,KAAK,IAAK,IAAIC,IAAI,CAACD,KAAK,CAAC,CAACE,kBAAkB,CAAC,CAAC;AAEvF,OAAO,MAAMC,qBAAqB,GAAIC,GAAG,IAAK;EAC1C;EACA,MAAMC,KAAK,GAAGD,GAAG,CAACE,KAAK,CAAC,WAAW,CAAC;;EAEpC;EACA,MAAMC,gBAAgB,GAAGF,KAAK,CAACG,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGF,IAAI,CAACG,KAAK,CAAC,CAAC,CAAC,CAAC;;EAExF;EACA,MAAMC,MAAM,GAAGN,gBAAgB,CAACO,IAAI,CAAC,GAAG,CAAC;EAEzC,OAAOD,MAAM;AACjB,CAAC;AACD,OAAO,IAAIE,MAAM,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}